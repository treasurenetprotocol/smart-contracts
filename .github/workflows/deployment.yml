name: Deployment Dry Run

on:
  workflow_call:
    inputs:
      deps_cache_key:
        required: true
        type: string

jobs:
  deployment:
    name: Deployment Dry Run
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1
        with:
          version: nightly

      - name: Restore cache
        uses: actions/cache/restore@v4
        with:
          path: |
            out/
            cache/
            lib/
            node_modules/
          key: ${{ inputs.deps_cache_key }}
          restore-keys: |
            ${{ runner.os }}-deps-

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts
          path: artifacts/

      - name: Copy build artifacts
        run: cp -r artifacts/out ./out

      - name: Run deployment simulation
        run: |
          # Create a simulation script if you don't have one
          mkdir -p script
          if [ ! -f script/DeploySimulation.s.sol ]; then
            echo "// SPDX-License-Identifier: GPL-3.0
            pragma solidity 0.8.29;
            
            import {Script} from \"forge-std/Script.sol\";
            
            contract DeploySimulation is Script {
                function run() external {
                    // This is just a simulation to ensure deployments would work
                    vm.startBroadcast();
                    // Add deployment logic here
                    vm.stopBroadcast();
                }
            }" > script/DeploySimulation.s.sol
          fi
          
          # Run the simulation without actually broadcasting
          forge script script/DeploySimulation.s.sol --fork-url https://eth-mainnet.alchemyapi.io/v2/demo 