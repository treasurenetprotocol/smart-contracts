name: CI
on:
  push:
    branches:
      - main
      - release/**
  pull_request:
    types: [opened, synchronize, reopened]
  merge_group:
permissions:
  contents: read
  id-token: write

jobs:
  setup:
    name: Setup Dependencies
    runs-on: ubuntu-latest
    outputs:
      deps_cache_key: ${{ steps.cache_key.outputs.key }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Generate cache key
        id: cache_key
        run: echo "key=${{ runner.os }}-deps-${{ hashFiles('**/package-lock.json', '**/foundry.toml') }}" >> $GITHUB_OUTPUT

      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1
        with:
          version: nightly

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Install NPM dependencies
        run: npm install

      - name: Install Forge libraries
        run: forge install foundry-rs/forge-std --no-commit

      # Cache Foundry artifacts for all jobs
      - name: Cache Foundry artifacts
        uses: actions/cache@v4
        with:
          path: |
            out/
            cache/
            lib/
            node_modules/
          key: ${{ steps.cache_key.outputs.key }}

  lint:
    needs: [setup]
    uses: ./.github/workflows/lint.yml
    with:
      deps_cache_key: ${{ needs.setup.outputs.deps_cache_key }}

  build:
    needs: [setup]
    uses: ./.github/workflows/build.yml
    with:
      deps_cache_key: ${{ needs.setup.outputs.deps_cache_key }}

  security-check:
    needs: [build]
    uses: ./.github/workflows/security.yml
    with:
      deps_cache_key: ${{ needs.setup.outputs.deps_cache_key }}

  test:
    needs: [build]
    uses: ./.github/workflows/test.yml
    with:
      deps_cache_key: ${{ needs.setup.outputs.deps_cache_key }}

  coverage:
    needs: [build]
    uses: ./.github/workflows/coverage.yml
    with:
      deps_cache_key: ${{ needs.setup.outputs.deps_cache_key }}

  deployment-dry-run:
    if: github.ref == 'refs/heads/main' || github.event_name == 'pull_request'
    needs: [test, coverage, security-check]
    uses: ./.github/workflows/deployment.yml
    with:
      deps_cache_key: ${{ needs.setup.outputs.deps_cache_key }}
