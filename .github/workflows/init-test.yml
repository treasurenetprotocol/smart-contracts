name: Test Init Steps

on:
  pull_request:
    branches: [ main, develop ]

jobs:
  test-initialization:
    name: Test Foundry and Husky Initialization
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install Dependencies
        run: npm i

      - name: Install Foundry using setup script
        run: |
          chmod +x ./setup-foundry.sh
          ./setup-foundry.sh
          
      - name: Set Foundry PATH
        run: |
          # Direct installation of foundryup if not found
          if [ ! -f "$HOME/.foundry/bin/foundryup" ]; then
            curl -L https://foundry.paradigm.xyz | bash
          fi
          
          # Add foundry to PATH for all subsequent steps
          echo "$HOME/.foundry/bin" >> $GITHUB_PATH
          
          # Verify PATH update
          echo "Updated PATH: $GITHUB_PATH"

      - name: Verify Foundry Installation
        run: |
          # Check if forge is in PATH
          which forge || echo "forge not found in PATH"
          
          # List foundry directory contents
          ls -la $HOME/.foundry/bin || echo "Foundry directory not found"
          
          # Try to run forge directly with full path
          $HOME/.foundry/bin/forge --version

      - name: Verify Husky Installation
        run: |
          test -d .husky || (echo "Husky directory not found" && exit 1)
          test -f .husky/pre-commit || (echo "Pre-commit hook not found" && exit 1)
          test -x .husky/pre-commit || (echo "Pre-commit hook not executable" && exit 1)

      - name: Verify Foundry Build Works
        run: $HOME/.foundry/bin/forge build

      - name: Run Simple Test
        run: $HOME/.foundry/bin/forge test -vvv --match-test "testSimple" || echo "No simple test found, but forge command worked"

      - name: Simulate Git Commit to Test Pre-commit Hook
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          touch test-file.sol
          echo "// SPDX-License-Identifier: GPL-3.0\npragma solidity 0.8.29;\n\ncontract Test {}" > test-file.sol
          git add test-file.sol
          
          # Set FORGE_PATH env var for the pre-commit hook
          export FORGE_PATH="$HOME/.foundry/bin/forge"
          GIT_HOOK_BYPASS=true git commit -m "test: Add test file to verify hooks" || echo "Pre-commit hook executed" 